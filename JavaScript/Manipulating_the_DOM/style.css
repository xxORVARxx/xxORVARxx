/**** Definition of Units: ****/
/* 'px' - An absolute unit of measurement (like in, pt, or cm).
 *      - All absolute measurements are related to each other: 1cm is always 37.8px.
 *      - Note that 1cm is almost never actually a physical centimeter in screen-based media.
 * 'em' - A relative unit of measurement. (unit relative to the 'PARENT'-element font-size).
 *      - Without any CSS at all: 1em == 16px == 0.17in == 12pt == 1pc == 4.2mm == 0.42cm.
 *      - The 'em' units will multiply with the inherent 'em' when applied to font-size.
 *      - When used with 'padding', 'margin' and other, it won't multiply with the inherent 'em'.
 *      - if the font-size changes at any level in the document, 1em becomes the new font-size.
 *      - Parent:font-size 2em{ Parent: font-size 2em{ Element: font-size 2em{ is 8em == 128px }}}
 * 'rem' - A relative unit of measurement. (unit relative to the 'ROOT'-element font-size)
 *       - The same as 'em' but will NOT multiply with the inherent 'rem' or 'em'.
 * '%' - Is based on the length of the same property of the parent element.
 * 'vw' - 'Viewport-width' unit, 1vw is equal to 1% of the width of the viewport.
 * 'vh' - 'Viewport-height' unit, 1vh is equal to 1% of the height of the viewport.
 * 'vmin' - This value will be whichever is smaller at the moment, vw or vh.
 */

/**** Position and Layout: ****/
/* The 'position' Property:
 * 'static' - This is the default value.
 *          - Are NOT affected by 'top', 'bottom', 'left', and 'right' properties.
 *          - It is always positioned according to the normal flow of the page.
 * 'relative' - The element is positioned relative to its normal position.
 *            - Can by adjusted away from its normal position with 'top'...'right' properties.
 *            - When adjusted away, other content will not fit into any gap left by the element.
 * 'absolute' - The element is positioned absolutely to its first 'positioned'-parent.
 *            - Note: 'positioned'-element is when the position is NOT 'static'.
 *            - Works well with 'relative'-parent, but 'static', it moves along with page scrolling.
 * 'fixed' - The element is positioned related to the browser window.
 *         - 'top'...'right' properties are used to position the element.
 *         - Does not leave a gap in the page where it would normally have been located.
 * 'sticky' - The element is positioned based on the user's scroll position.
 *          - A sticky element toggles between 'relative' and 'fixed'.
 */
/* The 'display' Property:
 * 'block' - Starts on a new line, and takes up the whole width (like <p>).
 * 'inline' - Any height and width properties will have no effect (like <span>).
 * 'inline-block' - Formatted as an inline element, but you can apply height and width values.
 * 'none' - The element is completely removed.
 * 'initial' - Sets this property to its default value.
 * 'inherit' - Inherits this property from its parent element.
 */

/**** Pseudo Classes: ****/
/* It is used to style elements when they are in a particular state.
 * ':hover'.
 * ':focus'.
 * ':first-child'.
 * ':valid'.
 */

/**** Pseudo Elements: ****/
/* '::first-line'.
 */

/**** Custom Properties: ****/
/* CSS Variables == Custom Properties.
 * it looks like this: '--my-property: value;'.
 */





/**** Variables: ****/
:root{
    /* root variables are available in the whole document.*/
    /* in this document the 'root' tag is the '<html>' tag.*/

    /* set the font-size to 62.5% to makes it easier to working with 'rem'.*/
    /* 62.5% font-size is equal to 10px and 1rem in most browsers*/
    font-size: 62.5%; /* 62.5% == 10px == 1rem */

    --my-theme-prime-color: #9361bf;
    --my-theme-secondary-color: #eee;

    /*--my-testing-border: none;*/ --my-testing-border: 1px solid black;
}

.c_prime-color-bg{
    background: var(--my-theme-prime-color);
}
.c_secondary-color-bg{
    background: var(--my-theme-secondary-color);
}



body{
    font-family: Tahoma;
    color: #444;
    letter-spacing: 0.1rem;
}

h1, h2{
    font-weight: normal;
}

.c_wrapper{
    width: 90%;
    max-width: 96rem;
    margin: 2rem auto;
    border-radius: 0.8rem;
    box-shadow: 0rem 0.1rem 0.6rem rgba(0, 0, 0, 0.2);
    box-sizing: border-box;
    padding: 0rem 0rem 2rem;
    overflow: hidden;
    border: 0.1rem solid lightgray;
}

.c_page-banner{
    background: var(--my-theme-secondary-color);
    padding: 1rem 0rem;
    text-align: center;
}

.c_page-banner h1{
    display: inline-block;
    margin: 1rem;
}

.c_page-banner .c_swatches{
    display: inline-block;
    margin: 0rem 1rem;
    border: 0.1rem solid lightgray;
    border-radius: 2rem;
}

.c_page-banner .c_swatches.c_left{
    background: var(--my-theme-prime-color);
    float: left;
}

.c_page-banner .c_swatches.c_right{
    background: var(--my-theme-secondary-color);
    float: right;
}

.c_page-banner .c_swatches span{
    display: inline-block;
    border-radius: 2rem;
    width: 1.5rem;
    height: 1.5rem;
    margin: 0.5rem 0.5rem 0.25rem 0.5rem;
    cursor: pointer;
}

.c_page-banner p{
    display: block;
    margin: 1rem;
}

.c_page-banner input{
    width: 90%;
    max-width: 30rem;
    margin: 2rem auto;
    display: block;
    padding: 0.8rem;
    border: 0.1rem solid #ddd;
    border-radius: 0.6rem;
    font-size: 1.6rem;
    color: #444;
}

.c_book-list, .c_add-book, .c_tabbed-content{
    margin: 3rem;
}

.c_book-list ul, .c_tabbed-content ul{
    list-style-type: none;
    padding: 0;
}

.c_book-list li{
    padding: 2rem;
    border-left: 0.5rem solid var(--my-theme-secondary-color);
    margin: 2rem 1rem;
}

.c_book-list li:hover{
    border-color: var(--my-theme-prime-color);
}

.c_delete{
    float: right;
    background: var(--my-theme-prime-color);
    padding: 0.6rem;
    border-radius: 0.4rem;
    cursor: pointer;
    color: white;
}

.c_delete:hover{
    background: #333;
}

.c_add-book{
    width: 75vw;
    max-width: 36rem;
    margin: 0rem auto;
}

.c_add-book input{
    display: block;
    margin: 2rem 0rem;
    padding: 1rem;
    border: 0.1rem solid #ccc;
    font-size: 1.6rem;
    border-radius: 0.6rem 0rem 0rem 0.6rem;
    box-sizing: border-box;
    width: 45vw;
    max-width: 25rem;
    float: left;
    clear: both;
}

.c_add-book button{
    border: 0.1rem solid var(--my-theme-prime-color);
    background: var(--my-theme-prime-color);
    padding: 1rem 2rem;
    font-size: 1.6rem;
    /*display: inline-block;*/
    margin: 0rem;
    border-radius: 0rem 0.6rem 0.6rem 0rem;
    cursor: pointer;
    width: 25vw;
    max-width: 10rem;
    float: left;
    margin: 2rem 0rem;
    border-left: 0rem;
    color: white;
}

.c_add-book::after{
    content: "";
    display: block;
    clear: both;
}

.c_link{
    display: block;
    text-align: center;
}


.c_tabbed-content li{
    display: inline-block;
    padding: 1rem 1.4rem;
    border-radius: 0.4rem;
    cursor: pointer;
    margin-right: 1rem;
}

.c_tabbed-content li.c_active{
    color: white;
}

.c_tabbed-content .c_panel{
    display: none;
    border: 0.1rem solid #ddd;
    padding: 0rem 1rem;
    border-radius: 0.4rem;
}

.c_tabbed-content .c_panel.c_active{
    display: block;
}